---
name: Download files and images

on:
  push:
    branches: [main, release-*]
    paths-ignore:
      - 'docs/**'
    tag:
      - 'v*'
  release:
    branches: [main, release-*]

env:
  IMAGE_REGISTRY: "ghcr.io"
  REGISTRY_USER: "${{ github.repository_owner }}"
  REGISTRY_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  TOOLS_IMAGE_REPO: "ghcr.io/${{ github.repository_owner }}/bootstrap-tools"
  OS_PACKAGES_IMAGE_REPO: "ghcr.io/${{ github.repository_owner }}/os-packages"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # fetch all git repo tag for define image tag
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Prepare for build images
        shell: bash
        run: |
          git describe --tags --always | sed 's/^/IMAGE_TAG=/' >> $GITHUB_ENV
          git branch --show-current | sed 's/^/BRANCH_NAME=/' >> $GITHUB_ENV
          git branch --show-current | sed 's/master/latest/;s/^/IMAGE_TAG_BY_BRANCH=/' >> $GITHUB_ENV

          source $GITHUB_ENV
          cat build/bootstrap/* .github/workflows/build.yaml | md5sum | tr -d '\ -' | sed 's/^/TOOLS_MD5=md5-/' >> $GITHUB_ENV
          if skopeo inspect docker://${TOOLS_IMAGE_REPO}:${BRANCH_NAME} > mainfest.json; then
            jq -r '.Labels.MD5' mainfest.json | sed 's/^/LATEST_TOOLS_MD5=/' >> $GITHUB_ENV
          else
            echo 'LATEST_TOOLS_MD5=null' >> $GITHUB_ENV
          fi

          make merge-dockerfile
          cat build/os-packages/* .github/workflows/build.yaml | md5sum | tr -d '\ -' | sed 's/^/OS_PACKAGES_MD5=md5-/' >> $GITHUB_ENV
          if skopeo inspect docker://${OS_PACKAGES_IMAGE_REPO}:${BRANCH_NAME} > mainfest.json; then
            jq -r '.Labels.MD5' mainfest.json | sed 's/^/LATEST_OS_PACKAGES_MD5=/' >> $GITHUB_ENV
          else
            echo 'LATEST_OS_PACKAGES_MD5=null' >> $GITHUB_ENV
          fi

      - name: Build and push bootstrap-tools images
        uses: docker/build-push-action@v2
        if: ${{ env.TOOLS_MD5 != env.LATEST_TOOLS_MD5 }}
        with:
          push: true
          context: .
          file: build/bootstrap/Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          labels: MD5=${{ env.TOOLS_MD5 }}
          tags: |
            ${{ env.TOOLS_IMAGE_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.TOOLS_IMAGE_REPO }}:${{ env.TOOLS_MD5 }}
            ${{ env.TOOLS_IMAGE_REPO }}:${{ env.BRANCH_NAME }}

      - name: Maximize rootfs space
        if: ${{ env.OS_PACKAGES_MD5 != env.LATEST_OS_PACKAGES_MD5 }}
        run: |
          df -h
          mkdir -p temp
          sudo rsync --delete-before -d temp/ /usr/share/dotnet/
          sudo rsync --delete-before -d temp/ /usr/local/lib/android/
          rm -rf temp
          df -h

      - name: Build and push os-package images
        uses: docker/build-push-action@v2
        if: ${{ env.OS_PACKAGES_MD5 != env.LATEST_OS_PACKAGES_MD5 }}
        with:
          push: true
          context: .
          file: build/os-packages/Dockerfile.all
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          labels: MD5=${{ env.OS_PACKAGES_MD5 }}
          tags: |
            ${{ env.OS_PACKAGES_IMAGE_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.OS_PACKAGES_IMAGE_REPO }}:${{ env.TOOLS_MD5 }}
            ${{ env.OS_PACKAGES_IMAGE_REPO }}:${{ env.BRANCH_NAME }}

      - name: Move new cache
        run: |
          rm -rf /tmp/.buildx-cache
          mkdir -p /tmp/.buildx-cache-new
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # debug action
      # - uses: mxschmitt/action-tmate@v3
