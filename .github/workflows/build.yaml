---
name: Build kubeplay packages

on:
  push:
    tag:
      - 'v*'
  release:
    branches: [main, release-*]

env:
  IMAGE_REGISTRY: "ghcr.io"
  REGISTRY_USER: "${{ github.repository_owner }}"
  REGISTRY_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  IMAGE_REPO: "ghcr.io/${{ github.repository_owner }}"
  KUBESPRAY_IMAGE: "ghcr.io/${{ github.repository_owner }}/kubespray"
  KUBEPLAY_IMAGE_REPO: "ghcr.io/${{ github.repository_owner }}/kubeplay"
  KUBESPRAY_FILES_IMAGE: "ghcr.io/${{ github.repository_owner }}/kubespray-files"
  KUBESPRAY_IMAGES_IMAGE: "ghcr.io/${{ github.repository_owner }}/kubespray-images"

jobs:
  build-package:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # - name: all-os
          #   image_name: os-packages-all-os
          - name: centos-7
            image_name: os-packages-centos7
          - name: centos-8
            image_name: os-packages-centos8
          - name: fedora-33
            image_name: os-packages-fedora33
          - name: fedora-34
            image_name: os-packages-fedora34
          - name: debian-9
            image_name: os-packages-debian9
          - name: debian-10
            image_name: os-packages-debian10
          - name: ubuntu-1804
            image_name: os-packages-ubuntu1804
          - name: ubuntu-2004
            image_name: os-packages-ubuntu2004
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # fetch all git repo tag for define image tag
          fetch-depth: 0

      - name: Checkout kubespray repo
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0
          path: kubespray
          repository: ${{ github.repository_owner }}/kubespray

      - name: Checkout os-packages repo
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0
          path: os-packages
          repository: ${{ github.repository_owner }}/os-packages

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Prepare for build images
        shell: bash
        run: |
          git describe --tags --always | sed 's/^/IMAGE_TAG=/' >> $GITHUB_ENV

          cd kubespray && git describe --tags --always | sed 's/^/KUBESPRAY_VERSION=/' >> $GITHUB_ENV && cd ..
          cd os-packages && git describe --tags --always | sed 's/^/OS_PACKAGE_REPO_TAG=/' >> $GITHUB_ENV && cd ..
          cp -rf kubespray/config config/kubespray && rm -rf kubespray os-packages

          source $GITHUB_ENV
          echo "" >> Dockerfile
          echo "COPY --from=${IMAGE_REPO}/${{ matrix.image_name }}:${OS_PACKAGE_REPO_TAG} / /" >> Dockerfile
          echo "COPY --from=${KUBESPRAY_FILES_IMAGE}:${KUBESPRAY_VERSION} / /resources/nginx" >> Dockerfile
          echo "COPY --from=${KUBESPRAY_IMAGES_IMAGE}:${KUBESPRAY_VERSION} / /resources/registry" >> Dockerfile

          sed -n 's|image: nginx:|NGINX_VERSION=|p' compose.yaml | tr -d ' ' >> $GITHUB_ENV
          sed -n 's|image: registry:|RERGISRRY_VERSION=|p' compose.yaml | tr -d ' ' >> $GITHUB_ENV

      - name: Build kubeplay image to local
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            NGINX_VERSION=${{ env.NGINX_VERSION }}
            RERGISRRY_VERSION=${{ env.RERGISRRY_VERSION }}
            KUBESPRAY_IMAGE=${{ env.KUBESPRAY_IMAGE }}
            KUBESPRAY_VERSION=${{ env.KUBESPRAY_VERSION }}
          outputs: type=local,dest=./

      - name: Prepare for upload package
        shell: bash
        run: |
          rm -rf linux_{amd64,arm64}/{Dockerfile,LICENSE}
          mv linux_amd64 kubeplay
          tar -I pigz -cf kubeplay-${{ env.IMAGE_TAG }}-${{ matrix.name }}-amd64.tar.gz kubeplay --remove-files
          mv linux_arm64 kubeplay
          tar -I pigz -cf kubeplay-${{ env.IMAGE_TAG }}-${{ matrix.name }}-arm64.tar.gz kubeplay --remove-files
          sha256sum kubeplay-${{ env.IMAGE_TAG }}-${{ matrix.name }}-{amd64,arm64}.tar.gz > kubeplay-${{ env.IMAGE_TAG }}-${{ matrix.name }}.sha256sum.txt

      - name: Release and upload packages
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            kubeplay-${{ env.IMAGE_TAG }}-${{ matrix.name }}.sha256sum.txt
            kubeplay-${{ env.IMAGE_TAG }}-${{ matrix.name }}-amd64.tar.gz
            kubeplay-${{ env.IMAGE_TAG }}-${{ matrix.name }}-arm64.tar.gz
